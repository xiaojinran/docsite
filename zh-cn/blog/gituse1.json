{
  "filename": "gituse1.md",
  "__html": "<h4>git介绍</h4>\n<ul>\n<li>Git（读音为/gɪt/）是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1]  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。（来自百度百科：<a href=\"https://baike.baidu.com/item/GIT/12647237?fr=aladdin\">https://baike.baidu.com/item/GIT/12647237?fr=aladdin</a>）</li>\n</ul>\n<h4>代码库概念</h4>\n<ul>\n<li>\n<p>在配置管理中，一般有3个库的概念，开发库、受控库、产品库</p>\n</li>\n<li>\n<p><strong>开发库</strong>是开发人员修改代码的地方。</p>\n</li>\n<li>\n<p><strong>受控库</strong>是测试版本代码存放的地方。</p>\n</li>\n<li>\n<p><strong>产品库</strong>是测试通过版本存放的地方。</p>\n</li>\n</ul>\n<h4>Hello World</h4>\n<p><em>通过一个简单的项目，了解如何使用git同步项目的代码和文档。</em></p>\n<ol>\n<li>登录github<a href=\"https://github.com/new\">新建一个repo仓库</a>，即项目仓库\n<img src=\"https://img-blog.csdnimg.cn/2020042010200476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9qaW5yYW4=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>获取项目地址\n<img src=\"https://img-blog.csdnimg.cn/20200420102110270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9qaW5yYW4=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>得到项目的git地址后，通过git客户端进行clone，这里使用linux cli命令行</li>\n</ol>\n<pre><code class=\"language-bash\">~ git <span class=\"hljs-built_in\">clone</span> https://github.com/xiaojinran/helloworld.git\nCloning into <span class=\"hljs-string\">'helloworld'</span>...\nremote: Enumerating objects: 3, <span class=\"hljs-keyword\">done</span>.\nremote: Counting objects: 100% (3/3), <span class=\"hljs-keyword\">done</span>.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (3/3), <span class=\"hljs-keyword\">done</span>.\n</code></pre>\n<ol start=\"4\">\n<li>在本地目录新建文件或者文档后，通过git add提交到本地仓库</li>\n</ol>\n<ul>\n<li>新建一个文档</li>\n</ul>\n<pre><code class=\"language-bash\">~ cat &gt;HelloWorld.html &lt;&lt;EOF\n&gt; &lt;p&gt;HellWorld,Welcome github,Hoping you enjoy it!!!&lt;/p&gt;\n&gt; EOF\n~ ls\nHelloWorld.html  README.md\n</code></pre>\n<ul>\n<li>提交并确认到本地仓库</li>\n</ul>\n<pre><code class=\"language-bash\">git add .\ngit commit\n\nAdd HelloWorld.html\n<span class=\"hljs-comment\"># Please enter the commit message for your changes. Lines starting</span>\n<span class=\"hljs-comment\"># with '#' will be ignored, and an empty message aborts the commit.</span>\n<span class=\"hljs-comment\"># On branch master</span>\n<span class=\"hljs-comment\"># Your branch is ahead of 'origin/master' by 1 commit.</span>\n<span class=\"hljs-comment\">#   (use \"git push\" to publish your local commits)</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Changes to be committed:</span>\n<span class=\"hljs-comment\">#   (use \"git reset HEAD &lt;file&gt;...\" to unstage)</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\">#       new file:   HelloWorld.html</span>\n</code></pre>\n<ol start=\"5\">\n<li>使用git push提交到github账户</li>\n</ol>\n<pre><code class=\"language-bash\"> ~ git push origin\n</code></pre>\n<ul>\n<li>输入账号和密码</li>\n</ul>\n<pre><code class=\"language-bash\">Username <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://github.com'</span>: xiaojinran\nPassword <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">'https://xiaojinran@github.com'</span>: \nCounting objects: 4, <span class=\"hljs-keyword\">done</span>.\nCompressing objects: 100% (3/3), <span class=\"hljs-keyword\">done</span>.\nWriting objects: 100% (3/3), 344 bytes | 0 bytes/s, <span class=\"hljs-keyword\">done</span>.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/xiaojinran/helloworld.git\n   9b5f7fd..8afe9f8  master -&gt; master\n</code></pre>\n<ol start=\"6\">\n<li><a href=\"http://xn--github-oz2li34m.com\">登录github.com</a>，即可查到项目已经被更新了\n<img src=\"https://img-blog.csdnimg.cn/20200420104153757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9qaW5yYW4=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h4>托管项目产品文档</h4>\n<ul>\n<li>如果你的项目产品文档是静态的，可以托管在github上面，具体配置如下：</li>\n</ul>\n<ol>\n<li>打开项目设置\n<img src=\"https://img-blog.csdnimg.cn/20200420104901390.png\" alt=\"在这里插入图片描述\"></li>\n<li>设置托管分支和目录\n<img src=\"https://img-blog.csdnimg.cn/20200420105049998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpYW9qaW5yYW4=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>访问产品文档地址\n<a href=\"https://xiaojinran.github.io/helloworld/HelloWorld.html\">https://xiaojinran.github.io/helloworld/HelloWorld.html</a>\n<img src=\"https://img-blog.csdnimg.cn/20200420105444641.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h4>小结</h4>\n<ul>\n<li>一个简单的对github的使用，希望能帮助入门的开发者或者文件管理者了解代码仓库的概念，github提供了非常多的有用的工具，比如通知机制、回调机制等，希望大家可以多多发掘。</li>\n</ul>\n",
  "link": "/zh-cn/blog/gituse1.html",
  "meta": {}
}